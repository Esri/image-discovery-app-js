{
    //title to display in the browser tab
    "windowTitle": "Image Discovery Application",
    "map": {
        //initializationParameters  - this object is passed to the map constructor. any parameters that esri.Map takes in as options are valid
        "initializationParameters": {
            "wrapAround180": true,
            "force3DTransforms": false,
            "navigationMode": "classic"
        },
        //useBasemapGallery: when true will use the esri core javascript basemap gallery instead of the built in gallery
        "useBasemapGallery": false,
        "basemaps": {
            //json object. key need to be a unique string
            //label: string label displayed on mouse over in base map widget
            //icon: url to thumbnail to display in base map widget. *not required*
            //url: url to tiled map service
            //NOTE: all base maps need to have the same spatial reference

            /*
             Adding open street map example
             "openStreetMap":{
             "label": "Open Street Map",
             "icon": "./images/thumbs/topographic.jpg",
             "isOpenStreetMap": true

             },
             */

            "topo": {
                "label": "World Topographic",
                "icon": "./images/thumbs/worldTopo.png",
                "url": "http://services.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/"
            },
            "worldStreets": {
                "label": "World Streets",
                "icon": "./images/thumbs/worldStreet.png",
                "url": "http://services.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer"
            }
        },
        "operationalLayers": [
            //type: "feature" , "dynamic", "tiled","image"
            //url: url to the ArcGIS Service
            {
                "type": "feature",
                "url": "http://arcgis-idmcloudsite-1166400923.us-west-1.elb.amazonaws.com/arcgis/rest/services/LiDARManagement/Anno/FeatureServer/0"
            }
        ],
        "legend": {
            //create: true if you want a legend
            "create": false
        },
        "overview": {
            //create: true if you want an overview map
            "create": false
        },
        "zoomSlider": {
            //create: true displays the zoom slider
            "create": true
        },
        //display  - contains parameters about the map coordinate readout at the bottom of the map
        "display": {
            //showScale - shows map scale when true
            "showScale": false,
            //showMGRS - shows mouse MGRS coordinate when true
            "showMGRS": true,
            //mgrsPrecision - precision for MGRS readout
            "mgrsPrecision": 6,
            //showLatLong - shows lat/long mouse readout
            "showLatLong": true,
			 //showScaleBar - shows the scale bar
            "showScaleBar": true
        },
        //max zoom level the application can zoom into for setting extent
        "maxClientZoom": 16
    },
    //geometryServiceUrl: string to a geometry service. not required, but a good idea
    "geometryServiceUrl": "http://kacstags1.esri.com/arcgis/rest/services/Utilities/Geometry/GeometryServer",

    //locators that can be searched on
    //takes in a JSON object with a url to a geocode server ie:
    "locators": [

        {
            "url": "http://tasks.arcgis.com/ArcGIS/rest/services/WorldLocator/GeocodeServer"
        }
    ],

    "toolsAccordion": {
        //create: true displays the tools accordion. NOTE: the tools accordion needs to be populated through code.
        "create": true
    },
    "header": {
        //displays: true displays the header widget
        "display": false,
        //headerText: String that displays as the larger text in the header
        "headerText": "Discovery Application",
        //headerImage: url to an image that displays in the header widget
        "headerImage": "images/kacstLogo.png",

        "contact": {
            //label: string for the contact text
            "label": "Contact Us",
            //url: url that will be navigated to on label click
            "url": "http://www.kacst.edu.sa/en/contact/Pages/default.aspx"
        },
        "help": {
            //label: string for the help text
            "label": "Help",
            //url: url that will be navigated to on label click
            "url": "http://www.kacst.edu.sa/en/Pages/default.aspx"
        }
    },
    "configureWidget": {
        //show: true add the configure widget to the tools menu. tools menu is hidden in imagery viewer
        "show": false,
        //create: when true, the configure widget is created and added to the tools dropdown
        "create": false
    },
    "bookmarks": {
        //url: url to a file containing bookmark json. see bookmarks.json for example of contents
        "url": "config/bookmarks.json",
        //allowCreation - when true, allows the user to create bookmarks that persist to local storage
        "allowCreation": true
    },
    "footerTogglerWidget": {
        //create: true displays the footer widget. NOTE: the footer needs to be populated through code
        "create": true
    },
    //featureEditor: contains information about a feature service that you can edit on through the feature edit widget
    "featureEditorWidget": {
        //service:  json object with a "url"  parameter to a feature server
        "service": {
            //url: string URL to a feature server. currently does not support multiple feature layers of the same geometry type
            "url": "http://arcgis-idmcloudsite-1166400923.us-west-1.elb.amazonaws.com/arcgis/rest/services/LiDARManagement/Anno/FeatureServer"
        }
    },
    "layersTransparencyWidget": {
        //create: true displays the layer transparency slider. current this is bound to the imagery viewer catalog layer. this will be expanded on
        "create": true
    },
    //toolsBar - object contaning items describing what to show in the tool bar located in the top right area of the browser
    "toolsBar": {
        //showToolsDropdown - when true, displays the tools dropdown button
        "showToolsDropdown": false,
        //showLayersButton - when true, displays the add layer/TOC button
        "showLayersButton": false,
        //showLayersButton - when true, displays the gear allowing you to select from multiple locator services
        "showConfigureLocatorsIcon": false,
        //showLocator - when true, displays the textbox where users can search for a location
        "showLocator": true
    },
    //logging  - configures the logging widget
    "logging": {
        "window": {
            //create - when true, creates the logging window in the viewer
            "create": false
        }
    },
    //reverseGeocodeWidget  - "create" child, when true creates the reverse geocode widget (requires locator in config)
    "reverseGeocodeWidget": {
        "create": true
    },
    //measureWidget  - "create" child, when true creates the meausure widget (requires "geometryServiceUrl" in config)
    "measureWidget": {
        "create": true

    },
    //identifyWidget  - "create" child, when true creates the identify widget. identify widget identifies on operational layers
    "identifyWidget": {
        "create": true,
		//maxResults  - max results to display in identify, defaults to 50
		"maxResults": 10
    },
    //timeSliderWidget  - "create" child, when true displays the time slider widget
    "timeSliderWidget": {
        "create": false
    },
    //layersWidget - contains items that dictate how to render the layers widget
    "layersWidget": {
        // allowAddLayers - when true, the user can add layers to the map
        "allowAddLayers": true,
        //showWKIDInAddLayers - when true, the current map WKID is displayed in add layers
        "showWKIDInAddLayers": true,
        //showWKIDInAddLayers - when true, the layers widget is accessible in the viewer
        "visible": true
    },
    //drawWidget - when "create" child is true, the draw widget is created
    "drawWidget": {
        "create": true
    },
    //zoomToUserLocationWidget - when "create" child is true, the zoom to user location widget is created
    "zoomToUserLocationWidget": {
        "create": true
    },
    //zoomToWidget - when "create" child is true, the zoom To widget is created
    "zoomToWidget": {
        "create": true
    },
	    //portalSearchWidget - when "create" child is true, the portal search widget is created
    "portalSearchWidget": {
        "create": true
    }

}