//>>built
define("esriviewer/util/RegExpUtils",["dojo/_base/declare"],function(_1){return _1([],{URLRegExp:new RegExp(/^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/),xmlExtensionRegExp:new RegExp(/\.xml$/i),jsonExtensionRegExp:new RegExp(/\.json$/i),kmlExtensionRegExp:new RegExp(/\.kml/i),featureLayerRegExp:new RegExp(/\/[0-9]+$/i),dateRegexp:new RegExp(/\d+\/\d+\/\d{4}/),numberRegExp:new RegExp(/^[+-]?\d*\.?\d*$/),numericRegexp:new RegExp(/[^0-9\.]/g),unsignedNumberRegExp:new RegExp(/^\d*\.?\d*$/),mapServiceNameRegExp:new RegExp(/.*\/(.*)\/MapServer\/?$/),geocodeServiceNameRegExp:new RegExp(/.*\/(.*)\/GeocodeServer\/?$/),imageServiceNameRegExp:new RegExp(/.*\/(.*)\/ImageServer\/?$/),globeServiceNameRegExp:new RegExp(/.*\/(.*)\/GlobeServer\/?$/),gpServerServiceNameRegExp:new RegExp(/.*\/(.*)\/GPServer\/?$/),featureServerServiceNameRegExp:new RegExp(/.*\/(.*)\/FeatureServer\/?$/),numberToStringWithCommasRegexp:new RegExp(/\B(?=(\d{3})+(?!\d))/g),whitespaceRegexp:new RegExp(/\s*/g),isUrl:function(_2){return this.URLRegExp.test(_2);},isFeatureLayer:function(_3){var _4=_3.indexOf("/"+VIEWER_GLOBALS.SERVICE_TYPES.FEATURE_SERVER+"/")>-1;var _5=_3.indexOf("/"+VIEWER_GLOBALS.SERVICE_TYPES.MAP_SERVER+"/")>-1;if(_4||_5){return this.featureLayerRegExp.test(_3);}},isXmlExtension:function(_6){return this.xmlExtensionRegExp.test(_6);},isJsonExtension:function(_7){return this.jsonExtensionRegExp.test(_7);},isKMLExtension:function(_8){return this.kmlExtensionRegExp.test(_8);},isDate:function(_9){return this.dateRegexp.test(_9);},isNumber:function(_a){return this.numberRegExp.test(_a);},isUnsignedNumber:function(_b){return this.unsignedNumberRegExp.test(_b);},stripNonNumberic:function(_c){return _c.toString().replace(this.numericRegexp,"");},stripWhitespace:function(_d){return _d.toString().replace(this.whitespaceRegexp,"");},getCharacterOccuranceCount:function(_e,_f){return _f.split(_e).length-1;},getServiceNameFromUrl:function(url){var _10=VIEWER_UTILS.getServiceTypeFromUrl(url);if(_10){var _11=null;if(_10==VIEWER_GLOBALS.SERVICE_TYPES.MAP_SERVER){_11=this.mapServiceNameRegExp;}else{if(_10==VIEWER_GLOBALS.SERVICE_TYPES.IMAGE_SERVER){_11=this.imageServiceNameRegExp;}else{if(_10==VIEWER_GLOBALS.SERVICE_TYPES.GP_SERVER){_11=this.gpServerServiceNameRegExp;}else{if(_10==VIEWER_GLOBALS.SERVICE_TYPES.GLOBE_SERVER){_11=this.globeServiceNameRegExp;}else{if(_10==VIEWER_GLOBALS.SERVICE_TYPES.FEATURE_SERVER){_11=this.featureServerServiceNameRegExp;}else{if(_10==VIEWER_GLOBALS.SERVICE_TYPES.GEOCODE_SERVER){_11=this.geocodeServiceNameRegExp;}else{return url;}}}}}}var res=_11.exec(url);if(res!=undefined&&res[1]!=undefined){return res[1].replace("_"," ");}return url;}else{return url;}},numberToStringWithCommas:function(x){var _12=x.toString().split(".");_12[0]=_12[0].replace(this.numberToStringWithCommasRegexp,",");return _12.join(".");}});});