//>>built
require({cache:{"url:esriviewer/ui/weather/conditions/template/WeatherWidgetTemplate.html":"<div>\r\n    <div class=\"weatherSearchContent\">\r\n        <div class=\"weatherSearchLbl\">Enter a Zip Code or City,State</div>\r\n        <div class=\"weatherSearchContentInput\">\r\n            <input type=\"text\"\r\n                   data-bind=\"value: weatherSearchTerm, valueUpdate: 'afterkeydown',  event:{keyup:checkForSearchEnter}\"/>\r\n            <button class=\"weatherSearchButton\" data-bind=\"click:queryWeather\">Search</button>\r\n            <div title=\"Select Location\"\r\n                 class=\"weatherLocationByPointIcon annotationOptionButton pointUnselected fivePixelBorderRadius\"\r\n                 data-bind=\"click: toggleDrawActive, css:{pointSelected: drawActive}\"></div>\r\n        </div>\r\n    </div>\r\n    <div class=\"weatherResultsContent\" data-bind=\"visible: hasError() == false\">\r\n        <div class=\"clearResultIconContainer\" data-bind=\"click: clearResults, visible: hasResults()\">\r\n           clear results\r\n        </div>\r\n        <div class=\"weatherResultsConditionsContent\" data-bind=\"foreach: weatherResponses\">\r\n            <div class=\"weatherConditionsOuter defaultBorder\">\r\n                <div class=\"weatherConditionsInner defaultBackground\">\r\n                    <div data-bind=\"text: $data.display_location.full\"></div>\r\n                    <div class=\"weatherConditionsContainer\">\r\n                        <div>\r\n                            <span>Temperature:</span>\r\n                            <span data-bind=\"text: $data.temperature_string\"></span>\r\n                        </div>\r\n                        <div>\r\n                            <span>Wind:</span>\r\n                            <span data-bind=\"text: $data.wind_string\"></span>\r\n                        </div>\r\n                        <div>\r\n                            <span>Local Time:</span>\r\n                            <span data-bind=\"text: $data.local_time_rfc822\"></span>\r\n                        </div>\r\n                        <div class=\"weatherConditionsIcon\">\r\n                            <img data-bind=\"attr:{src: $data.icon_url}\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"weatherForecastContent\" data-bind=\"foreach: forecastResponses\">\r\n            <span class=\"weatherForecastContentEntry fivePixelBorderRadius defaultBorder\">\r\n                <div class=\"weatherForecastDayLbl\" data-bind=\"text:$data.date.weekday\">\r\n                </div>\r\n                <div>\r\n                    <span>Conditions: </span>\r\n                    <span data-bind=\"text: $data.conditions\"></span>\r\n                </div>\r\n                <div>\r\n                    <span>High: </span>\r\n                    <span data-bind=\"text:$data.high.fahrenheit\"></span>\r\n                    <span> F</span>\r\n                    <span>(<span data-bind=\"text:$data.high.celsius\"></span> C)</span>\r\n                </div>\r\n                <div>\r\n                    <span>Low: </span>\r\n                    <span data-bind=\"text:$data.low.fahrenheit\"></span>\r\n                    <span> F</span>\r\n                    <span>(<span data-bind=\"text:$data.low.celsius\"></span> C)</span>\r\n                </div>\r\n                <div>\r\n                    <img data-bind=\"attr:{title:$data.conditions,src:$data.icon_url}\"/>\r\n                </div>\r\n            </span>\r\n        </div>\r\n        <div class=\"weatherCameraContent\" data-bind=\"foreach: weatherCamResponses\">\r\n            <span class=\"weatherCameraContentEntry\">\r\n                <img class=\"fivePixelBorderRadius\"\r\n                     data-bind=\"click: $parent.handleCamClick, attr:{src: $data.WIDGETCURRENTIMAGEURL, title: $data.linktext}\">\r\n            </span>\r\n        </div>\r\n    </div>\r\n    <div class=\"weatherResultsErrorContent\" data-bind=\"text:errorString, visible: hasError\">\r\n\r\n    </div>\r\n</div>","url:esriviewer/ui/weather/conditions/theme/WeatherWidgetTheme.css":".weatherConditionsOuter{margin-top:3px;}.weatherConditionsInner{padding-top:3px;margin:auto;text-align:center;font-size:8pt;}.weatherResultsErrorContent{color:#F00000;font-size:8pt;margin-top:5px;}.weatherConditionsIcon{padding:1px 0;}.weatherLocationByPointIcon{position:absolute;left:15px;top:2px;}.weatherSearchContent{height:50px;}.weatherSearchLbl{margin-bottom:5px;}.weatherCameraContentEntry{cursor:pointer;}.weatherCameraContentEntry,.weatherForecastContentEntry{margin:0 5px;display:inline-block;}.weatherCameraContent, .weatherForecastContent{white-space:nowrap;max-width:100%;overflow-x:auto;overflow-y:hidden;padding:5px 0;}.weatherResultsConditionsContent{margin-bottom:5px;}.weatherForecastContentEntry{text-align:center;padding:0 5px;font-size:8pt;}.weatherForecastDayLbl{color:blue;margin-bottom:2px;}.clearResultIconContainer{margin-top:5px;color:blue;text-decoration:underline;cursor:pointer;text-align:right;}.clearResultsIcon{float:right;cursor:pointer;}.weatherSearchContentInput{margin:auto;text-align:center;position:relative;}.weatherSearchButton{vertical-align:1px;margin-left:5px;}"}});define("esriviewer/ui/weather/conditions/WeatherWidget",["dojo/_base/declare","xstyle/css!./theme/WeatherWidgetTheme.css","dojo/text!./template/WeatherWidgetTemplate.html","dojo/_base/lang","dojo/topic","../../base/UITemplatedWidget","./model/WeatherViewModel","../../../base/DataLoaderSupport","../../draw/base/MapDrawSupport"],function(_1,_2,_3,_4,_5,_6,_7,_8,_9){return _1([_6,_8,_9],{templateString:_3,postCreate:function(){this.inherited(arguments);this.viewModel=new _7();this.viewModel.drawActive.subscribe(_4.hitch(this,this.handleDrawActiveChange));this.viewModel.on(this.viewModel.SEARCH_WEATHER_CONDITIONS,_4.hitch(this,this.queryWeatherConditions));ko.applyBindings(this.viewModel,this.domNode);this.queryResponseCallback=_4.hitch(this,this.handleResponse);this.queryResponseErrback=_4.hitch(this,this.handleErrorResponse);},handleDrawActiveChange:function(_a){if(_a){this.handlePointDraw();}else{this.clearDraw();}},handlePointDraw:function(){this.setDraw(VIEWER_GLOBALS.EVENTS.MAP.TOOLS.DRAW_POINT);},clearDraw:function(){this.inherited(arguments);_5.publish(VIEWER_GLOBALS.EVENTS.DRAW.USER.DRAW_CANCEL);this.viewModel.drawActive(false);},geometryAdded:function(_b){var _c=this.viewModel;_5.publish(VIEWER_GLOBALS.EVENTS.GEOMETRY_SERVICE.TASKS.PROJECT_TO_LAT_LON,_b,function(_d){if(_d&&_d.length>0){_c.weatherSearchTerm(_d[0].y.toFixed(3)+","+_d[0].x.toFixed(3));}});this.viewModel.drawActive(false);},loadViewerConfigurationData:function(){this.inherited(arguments);var _e=null;_5.publish(VIEWER_GLOBALS.EVENTS.CONFIGURATION.GET_ENTRY,"weatherWidget",function(_f){_e=_f;});if(_e&&_4.isObject(_e)&&_e.configurationUrl){this.loadJson(_e.configurationUrl,_4.hitch(this,function(_10){_4.mixin(this,_10||{});}));}},queryWeatherConditions:function(_11){if(_11!=null&&_11!=""){var _12=VIEWER_UTILS.joinUrl(this.wundergroundAPIUrl,this.wundergroundAPIKey);_12=VIEWER_UTILS.joinUrl(_12,this.wundergroundResponseFeatures.join("/"));_12=VIEWER_UTILS.joinUrl(_12,this.wundergroundConditionsQueryPart);_12=VIEWER_UTILS.joinUrl(_12,_11+".json");this.viewModel.clearResults();this.loadJsonP(_12,{},this.queryResponseCallback,this.queryResponseErrback);}},handleResponse:function(_13){if(_13!=null&&_4.isObject(_13)){if(_13.response!=null&&_4.isObject(_13.response)&&_13.response.error!=null&&_4.isObject(_13.response.error)){this.viewModel.hasError(true);if(_13.response.error.description){this.viewModel.errorString(_13.response.error.description);}else{this.viewModel.errorString("There was an error querying weather");}}else{var _14=false;this.viewModel.hasError(false);this.viewModel.errorString("");if(_13.webcams!=null&&_4.isArray(_13.webcams)){this.handleCamsResponse(_13.webcams);_14=true;}if(_13.current_observation!=null&&_4.isObject(_13.current_observation)){this.handleConditionsResponse(_13.current_observation);_14=true;}if(_13.forecast!=null&&_4.isObject(_13.forecast)&&_13.forecast.simpleforecast!=null&&_4.isObject(_13.forecast.simpleforecast)&&_13.forecast.simpleforecast.forecastday!=null&&_4.isArray(_13.forecast.simpleforecast.forecastday)){this.handleForecastResponse(_13.forecast.simpleforecast.forecastday);_14=true;}if(!_14){this.viewModel.hasError(true);this.viewModel.errorString("Please enter zip code (92373) or City,State (Redlands, CA)");}}}else{this.viewModel.hasError(true);this.viewModel.errorString("There was an error querying weather");}},handleErrorResponse:function(_15){_5.publish(VIEWER_GLOBALS.EVENTS.MESSAGING.SHOW,"There was an error querying weather");this.viewModel.hasError(true);this.viewModel.errorString("There was an error querying weather");},handleCamsResponse:function(_16){if(_16!=null&&_4.isArray(_16)){for(var i=0;i<_16.length;i++){this.viewModel.weatherCamResponses.push(_16[[i]]);}}},handleConditionsResponse:function(_17){if(_17){this.viewModel.weatherResponses.push(_17);}},handleForecastResponse:function(_18){for(var i=0;i<_18.length;i++){this.viewModel.forecastResponses.push(_18[i]);}}});});