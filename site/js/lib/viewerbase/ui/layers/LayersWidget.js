//>>built
require({cache:{"url:esriviewer/ui/layers/template/LayersWidgetTemplate.html":"<div>\r\n    <div class=\"defaultTabContainer\" data-dojo-attach-point=\"layersTabContainer\">\r\n        <span data-dojo-attach-point=\"layersTab\"\r\n              data-bind=\"click:showLayersList, css: {selectedTab: layersListVisible}\">Layers</span>\r\n        <span data-dojo-attach-point=\"addLayersTab\"\r\n              data-bind=\"click:showAddLayers, css: {selectedTab: addlayersVisible}\">Add Layer</span>\r\n        <span data-dojo-attach-point=\"persistsedLayersTab\"\r\n              data-bind=\"click:showUserPersistedLayers, css: {selectedTab: persistedLayersVisible}\">Saved Layers</span>\r\n    </div>\r\n    <div data-bind=\"visible:addlayersVisible\" class=\"addLayerContainer\">\r\n        <div class=\"addLayerContainerInner\">\r\n            <div class=\"viewerAddLayerWorkingWKIDContainer\" data-bind=\"visible:showWKIDInAddLayers\">\r\n                <span class=\"viewerAddLayerLabel \">Map WKID:</span>\r\n                <span class=\"viewerAddLayerWorkingWKIDLabel\" data-bind=\"text: viewerWKID\"></span>\r\n            </div>\r\n            <div class=\"viewerAddLayerLabel viewerAddLayerUrlLabel \">URL:</div>\r\n            <div data-dojo-type=\"dijit/form/TextBox\" style=\"width: 100%\" data-dojo-attach-point=\"addLayerTextInput\"\r\n                 data-dojo-attach-event=\"onKeyUp:handleLayerAddUrlKeyUp\"></div>\r\n            <div class=\"viewerAddLayerLabel viewerAddLayerUrlLabel \">Label:</div>\r\n            <div data-dojo-type=\"dijit/form/TextBox\" style=\"width: 100%\" data-dojo-attach-point=\"addLayerLabelInput\"\r\n                 value=\"Added Layer\"></div>\r\n            <div class=\"viewerAddLayerActions\">\r\n                <div class=\"layerTypeContainer\">\r\n                    <div class=\"viewerAddLayerLabel\">Type:</div>\r\n                    <select data-dojo-type=\"dijit/form/Select\" style=\"width: 100%\"\r\n                            data-dojo-attach-point=\"addLayerTypeSelect\"\r\n                            style=\"width: 15em\"></select>\r\n                </div>\r\n                <div class=\"viewerAddLayerButtonActions\">\r\n                    <div data-dojo-type=\"dijit/form/Button\" data-dojo-attach-event=\"onClick:addManualLayer\">Add Layer\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <div data-dojo-attach-point=\"layerTocContainer\" data-bind=\"visible:layersListVisible\">\r\n\r\n    </div>\r\n    <!-- <ul class=\"viewerLayerListing\" data-dojo-attach-point=\"layersList\" data-bind=\"visible:layersListVisible\">\r\n\r\n     </ul> -->\r\n    <div data-bind=\"visible:persistedLayersVisible\" data-dojo-attach-point=\"userPersistedLayersContainer\">\r\n\r\n    </div>\r\n\r\n\r\n</div>"}});define("esriviewer/ui/layers/LayersWidget",["dojo/_base/declare","dojo/text!./template/LayersWidgetTemplate.html","dojo/topic","dojo/_base/connect","dojo/_base/lang","dojo/on","dojo/dom-style","dojo/dom-construct","../base/UITemplatedWidget","../tooltip/ConfirmTooltip","./base/LayersLocalStorageMixin","./model/LayersWidgetViewModel","./LayersTocWidget","./base/UserPersistedLayersListWidget","dijit/form/TextBox","dijit/form/Select","dijit/form/Button"],function(_1,_2,_3,_4,_5,on,_6,_7,_8,_9,_a,_b,_c,_d,_e,_f,_10){return _1([_8,_a],{firstAddLayerDisplay:true,errorMessageDelay:5000,successMessageDelay:2000,allowAddLayers:true,templateString:_2,constructor:function(_11){_5.mixin(this,_11||{});this.addedLayers={};},postCreate:function(){this.inherited(arguments);this.viewModel=new _b();this.viewModel.showUserPersistedLayersIcon(this.localStoragePersistSupported);this.viewModel.on(this.viewModel.ADD_LAYERS_VISIBLE,_5.hitch(this,this.handleAddLayersVisible));ko.applyBindings(this.viewModel,this.domNode);this.createLayersTocWidget();_6.set(this.domNode,"minHeight","250px");if(this.allowAddLayers){this.populateLayerTypesDropdown();}else{_6.set(this.layersTabContainer,"display","none");}this.manualLayerLoadedSuccessCallback=_5.hitch(this,this.handleManualLayerLoadedCallback);this.manualLayerLoadedErrCallback=_5.hitch(this,this.handleManualLayerLoadErrorCallback);if(this.localStoragePersistSupported){this.createUserPersistedLayerListWidget();}},handleAddLayersVisible:function(){this.addLayerTextInput.set("value","");this.addLayerLabelInput.set("value","");this.addLayerTextInput.focus();},createLayersTocWidget:function(){this.layersTocWidget=new _c();_7.place(this.layersTocWidget.domNode,this.layerTocContainer);},createUserPersistedLayerListWidget:function(){if(this.userPersistedLayersListWidget==null){this.userPersistedLayersListWidget=new _d();this.userPersistedLayersListWidget.placeAt(this.userPersistedLayersContainer);this.userPersistedLayersListWidget.on("removeUserPersistedGraphics",_5.hitch(this,this.handleRemoveUserPersistedLayer));this.userPersistedLayersListWidget.on("addUserPersistedLayerToMap",_5.hitch(this,this.handleAddUserPersistedLayerToMap));this.userPersistedLayersListWidget.on("removeAllUserPersistedGraphics",_5.hitch(this,this.handleRemoveAllUserPersistedLayers));this.userPersistedLayersListWidget.addExistingPersistedLayerItems(this.persistedUserLayers);}},showLayerList:function(){this.viewModel.showLayersList();},handleRemoveAllUserPersistedLayers:function(){this.removeAllLayers();},handleRemoveUserPersistedLayer:function(_12){if(_12!=null&&_12!=""){this.deleteUserPersistedLayer(_12);}},handleAddUserPersistedLayerToMap:function(_13,_14){if(_13!=null&&_13!=""){this._addLayer(_13,_14);}},loadViewerConfigurationData:function(){var _15=null;_3.publish(VIEWER_GLOBALS.EVENTS.CONFIGURATION.GET_ENTRY,"layersWidget",function(_16){_15=_16;});if(_15){for(var key in _15){if(key==null||key.toString()==null){continue;}if(key.toString().toLowerCase()=="allowAddLayers".toLowerCase()){this.allowAddLayers=_15[key];}else{if(key.toString().toLowerCase()=="showWKIDInAddLayers".toLowerCase()){if(_15[key]==false){this.viewModel.showWKIDInAddLayers(false);}}}}}},handleManualLayerLoadedCallback:function(){_3.publish(VIEWER_GLOBALS.EVENTS.MESSAGING.SHOW,"Layer Added");VIEWER_UTILS.log("Layer Added",VIEWER_GLOBALS.LOG_TYPE.INFO);},handleManualLayerLoadErrorCallback:function(msg){if(msg!=null&&_5.isString(msg)){VIEWER_UTILS.log("Could not add layer: "+msg,VIEWER_GLOBALS.LOG_TYPE.ERROR);}else{VIEWER_UTILS.log("Add Layer Failed",VIEWER_GLOBALS.LOG_TYPE.ERROR);}},initListeners:function(){this.inherited(arguments);_3.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.ADDED,_5.hitch(this,this.addLayer));_3.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.REMOVED,_5.hitch(this,this.handleLayerRemoved));},populateLayerTypesDropdown:function(){var _17;for(var key in VIEWER_GLOBALS.LAYER_TYPES){_17=VIEWER_GLOBALS.LAYER_TYPES[key];var _18={label:_17.LABEL,value:_17.VALUE};this.addLayerTypeSelect.addOption(_18);}},handleAddLayers:function(_19){if(_19!=null&&_5.isArray(_19)){for(var i=0;i<_19.length;i++){this.addLayer(_19[i]);}}},addLayer:function(_1a){if(_1a==null||_1a.url==null){return;}var _1b=_1a.url.toLowerCase();if(this.addedLayers[_1b]!=null){return;}this.layersTocWidget.addLayer(_1a);this.addedLayers[_1b]={layer:_1a};if(this.localStoragePersistSupported){this.saveLayer(_1a);}},saveLayer:function(_1c){var _1d=this.persistUserLayer(_1c);if(_1d){this.userPersistedLayersListWidget.addPersistedLayer(_1d);}},handleToggleLayerVisibility:function(_1e){if(_1e.visible){_1e.hide();}else{_1e.show();}},handleZoomToLayer:function(_1f){_3.publish(VIEWER_GLOBALS.EVENTS.MAP.EXTENT.SET_EXTENT,_1f.fullExtent);},handleLayerAddUrlKeyUp:function(e){if(VIEWER_UTILS.isEnterKey(e)){this.addManualLayer();}else{var url=this.addLayerTextInput.get("value");if(url==""){return;}var _20=VIEWER_UTILS.getServiceTypeFromUrl(url);if(_20!=null){if(_20===VIEWER_GLOBALS.SERVICE_TYPES.IMAGE_SERVER){this.addLayerTypeSelect.set("value",VIEWER_GLOBALS.LAYER_TYPES.IMAGE_SERVER.VALUE);}else{if(_20===VIEWER_GLOBALS.SERVICE_TYPES.FEATURE_SERVER){this.addLayerTypeSelect.set("value",VIEWER_GLOBALS.LAYER_TYPES.FEATURE_LAYER.VALUE);}else{if(_20===VIEWER_GLOBALS.SERVICE_TYPES.KML){this.addLayerTypeSelect.set("value",VIEWER_GLOBALS.LAYER_TYPES.KML.VALUE);}else{if(_20===VIEWER_GLOBALS.SERVICE_TYPES.MAP_SERVER){var _21=REG_EXP_UTILS.featureLayerRegExp.test(url);if(_21){this.addLayerTypeSelect.set("value",VIEWER_GLOBALS.LAYER_TYPES.FEATURE_LAYER.VALUE);}else{this.addLayerTypeSelect.set("value",VIEWER_GLOBALS.LAYER_TYPES.MAP_SERVER.VALUE);}}}}}}}},addManualLayer:function(){var url=this.addLayerTextInput.get("value");if(url!=""){if(VIEWER_UTILS.endsWith(url,"/")){url=url.substring(0,url.length-1);}this._addLayer(url);}},_addLayer:function(_22,_23){var _24=_23;if(_24==null||_24==""){_24=this.addLayerLabelInput.get("value");}_3.publish(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.ADD_FROM_URL,_22,{isOperationalLayer:true,canRemove:true,label:_24},this.manualLayerLoadedSuccessCallback,this.manualLayerLoadedErrCallback);},showConfirmDeleteLayerTooltip:function(_25,_26){this.deleteLayerConfirmedCallback=_5.hitch(this,this.handleRemoveLayerFromClick,_25);this.showDeleteLayerTooltip(_26);},handleRemoveLayerFromClick:function(_27){_3.publish(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.REMOVE,_27);},createConfirmDeleteLayerTooltip:function(){this.confirmDeleteLayerTooltip=new _9({confirmCallback:_5.hitch(this,this.handleConfirmedLayerDelete)});this.confirmDeleteLayerTooltip.on("hide",_5.hitch(this,function(){this.deleteLayerConfirmedCallback=null;}));},handleConfirmedLayerDelete:function(){if(_5.isFunction(this.deleteLayerConfirmedCallback)){this.deleteLayerConfirmedCallback();}this.deleteLayerConfirmedCallback=null;},showDeleteLayerTooltip:function(_28){if(_28==null){return;}if(this.confirmDeleteLayerTooltip==null){this.createConfirmDeleteLayerTooltip();}if(this.confirmDeleteLayerTooltip){this.confirmDeleteLayerTooltip.setAroundNode(_28);this.confirmDeleteLayerTooltip.show();}},handleLayerRemoved:function(_29){if(_29==null){return;}var _2a=_29.url.toLowerCase();if(this.addedLayers[_2a]!=null){this.layersTocWidget.removeLayer(_29);delete this.addedLayers[_2a];}},hidePopups:function(){if(this.confirmDeleteLayerTooltip){this.confirmDeleteLayerTooltip.hide();}}});});