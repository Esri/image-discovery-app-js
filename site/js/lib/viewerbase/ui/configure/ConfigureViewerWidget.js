//>>built
require({cache:{"url:esriviewer/ui/configure/theme/configureTheme.css":".configureViewerContainer{height:100%;margin-left:1%;width:98%;}.configureViewerContainer .configureViewerFirstEntry{margin-top:1%;}.configureWindowContent{padding-top:0 !important;}.configureViewerWindow{left:2.5%;top:12.5%;z-index:451;}.configureViewerEntryHeader{font-size:12pt;margin-bottom:6px;color:#767676;}.configureViewerEntryLabel{font-size:9pt;font-family:tahoma, sans-serif;}.configureViewerEntry{margin:10px 0;padding:10px;}.configureViewerWarning{color:blue;font-size:9pt;margin-top:5px;}.configureViewerEntryContent{margin-left:20px;}.configureViewerContainer * .addedElementLabel{font-size:10pt;color:#767676;}.configureViewerContainer * .viewerConfigurationAddedElement{margin-top:15px;}.configureEntryRemoveIcon{float:left;margin-right:7px;margin-top:1px;}.referenceAddedLayersContainer, .basemapAddedLayersContainer, .addedLocatorsContainer{max-height:100px;overflow:auto;overflow-x:hidden;}.persistedConfigureViewerEntryList{max-height:200px;overflow:auto;}.configurePersistedViewerEntryLabel{font-size:9pt;font-family:tahoma, sans-serif;}","url:esriviewer/ui/configure/template/ConfigureViewerTemplate.html":"<div class=\"configureViewerContainer\">\r\n    <div class=\"defaultTabContainer\" data-bind=\"visible: persistedViewEnabled\">\r\n        <span  data-bind=\"click:showAddEntriesView, css: {selectedTab: addEntriesVisible}\">Add Data</span>\r\n        <span data-bind=\"click:showPersistedEntriesView, css: {selectedTab: persistedEntriesVisible}\">Saved Data</span>\r\n    </div>\r\n    <div data-dojo-attach-point=\"persistedEntriesContainer\" data-bind=\"visible: persistedEntriesVisible\">\r\n    </div>\r\n    <div data-dojo-attach-point=\"addConfigurationEntriesContainer\" data-bind=\"visible: addEntriesVisible\">\r\n        <div data-bind=\"visible: showBasemapsConfiguration\"\r\n             class=\"configureViewerEntry fivePixelBorderRadius defaultBackground defaultBorder blueBoxShadow configureViewerFirstEntry\">\r\n            <div class=\"configureViewerEntryHeader\">Base Maps</div>\r\n            <div class=\"configureViewerEntryContent\">\r\n                <div class=\"configureViewerEntryLabel\">Base Map URL:</div>\r\n                <div data-dojo-attach-point=\"basemapAddInput\" style=\"width: 80%\"\r\n                     data-dojo-type=\"dijit/form/TextBox\" data-dojo-attach-event=\"onKeyUp:handleBasemapInputKeyUp\"></div>\r\n                <div data-dojo-attach-point=\"referenceMapsAddInput\"\r\n                     data-dojo-attach-event=\"onClick:handleAddManualBasemap\"\r\n                     data-dojo-type=\"dijit/form/Button\"> Add Base Map\r\n                </div>\r\n                <div class=\"configureViewerWarning\">Cached map services will be added as tiled if they are in\r\n                    the same spatial reference as the map.\r\n                </div>\r\n                <div data-dojo-attach-point=\"basemapAddedLayersContainer\" class=\"basemapAddedLayersContainer\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"configureViewerEntry fivePixelBorderRadius defaultBackground defaultBorder blueBoxShadow \">\r\n            <div class=\"configureViewerEntryHeader\">Reference Maps</div>\r\n            <div class=\"configureViewerEntryContent\">\r\n                <div class=\"configureViewerEntryLabel\">Reference Map URL:</div>\r\n                <div data-dojo-attach-point=\"referenceMapsAddInput\" style=\"width: 80%\"\r\n                     data-dojo-type=\"dijit/form/TextBox\"\r\n                     data-dojo-attach-event=\"onKeyUp:handleReferenceLayerInputKeyUp\"></div>\r\n                <div data-dojo-type=\"dijit/form/Button\" data-dojo-attach-event=\"onClick:handleAddReferenceLayer\"> Add\r\n                    Reference Map\r\n                </div>\r\n                <div class=\"configureViewerWarning\">Reference maps will be toggled with the \"Labels\" toolbar button\r\n                </div>\r\n                <div data-dojo-attach-point=\"referenceAddedLayersContainer\" class=\"referenceAddedLayersContainer\"></div>\r\n            </div>\r\n        </div>\r\n        <div class=\"configureViewerEntry fivePixelBorderRadius defaultBackground defaultBorder blueBoxShadow \"\r\n             data-bind=\"visible: showLocatorsConfiguration\">\r\n            <div class=\"configureViewerEntryHeader\">Locators</div>\r\n            <div class=\"configureViewerEntryContent\">\r\n                <div class=\"configureViewerEntryLabel\">Locator URL:</div>\r\n                <div data-dojo-attach-point=\"locatorAddInput\" data-dojo-attach-event=\"onKeyUp:handleLocatorInputKeyUp\"\r\n                     style=\"width: 80%\" data-dojo-type=\"dijit/form/TextBox\"></div>\r\n                <div data-dojo-type=\"dijit/form/Button\" data-dojo-attach-event=\"onClick:handleAddLocatorService\"> Add\r\n                    Locator\r\n                </div>\r\n                <div class=\"configureViewerWarning\">Locator service must accept a single line address for finding\r\n                    candidates.\r\n                </div>\r\n                <div data-dojo-attach-point=\"addedLocatorsContainer\" class=\"addedLocatorsContainer\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>"}});define("esriviewer/ui/configure/ConfigureViewerWidget",["dojo/_base/declare","xstyle/css!./theme/configureTheme.css","dojo/text!./template/ConfigureViewerTemplate.html","dojo/topic","dojo/on","dojo/_base/lang","dojo/dom-construct","dojo/dom-style","../base/UITemplatedWidget","../tooltip/ConfirmTooltip","./ConfigureViewerLocalStorageMixin","./model/ConfigureViewerViewModel","./ConfigureViewerPersistedListWidget","dijit/form/TextBox","dijit/form/Button"],function(_1,_2,_3,_4,on,_5,_6,_7,_8,_9,_a,_b,_c,_d,_e){return _1([_8,_a],{templateString:_3,constructor:function(){this.basemapsInConfiguration={};this.locatorsInConfiguration={};this.referenceLayersInConfiguration={};this.showBasemapsConfiguration=true;this.showLocatorsConfiguration=true;this.addedBasemaps={};this.addedReferenceLayers={};this.addedLocators={};this.basemapAddedCallback=_5.hitch(this,this.handleManualBasemapAdded);this.basemapAddErrorCallback=_5.hitch(this,this.handleManualBasemapAdded);this.referenceLayerAddedCallback=_5.hitch(this,this.handleManualReferenceLayerAdded);this.referenceLayerAddErrorCallback=_5.hitch(this,this.handleManualReferenceLayerAddError);this.locatorAddedCallback=_5.hitch(this,this.handleManualLocatorAdded);},postCreate:function(){this.inherited(arguments);this.viewModel=new _b();this.viewModel.persistedViewEnabled(this.localStoragePersistSupported);if(!this.showBasemapsConfiguration){this.viewModel.showBasemapsConfiguration(false);}if(!this.showLocatorsConfiguration){this.viewModel.showLocatorsConfiguration(false);}ko.applyBindings(this.viewModel,this.domNode);if(this.localStoragePersistSupported){this.createViewerPersistedListWidget();}},loadViewerConfigurationData:function(){var _f=null;_4.publish(VIEWER_GLOBALS.EVENTS.CONFIGURATION.GET_ENTRY,"toolsBar",function(_10){_f=_10;});if(_f!=null&&_5.isObject(_f)){if(_f.showConfigureLocatorsIcon!=null&&_f.showConfigureLocatorsIcon==false){this.showLocatorsConfiguration=false;}}var _11=null;_4.publish(VIEWER_GLOBALS.EVENTS.CONFIGURATION.GET_ENTRY,"map",function(_12){_11=_12;});if(_11&&_5.isObject(_11)){var key;if(_11.useBasemapGallery==true){this.showBasemapsConfiguration=false;}if(_11.referenceLayers!=null&&_5.isObject(_11.referenceLayers)){var _13;var _14;for(key in _11.referenceLayers){_13=_11.referenceLayers[key];_14=_13.url.toLowerCase();this.referenceLayersInConfiguration[_14]=_14;}}if(this.showBasemapsConfiguration&&_11.basemaps!=null&&_5.isObject(_11.basemaps)){var _15;var _16;for(key in _11.basemaps){_15=_11.basemaps[key];if(_15.url!=null&&_15.url!=""){_16=_15.url.toLowerCase();this.basemapsInConfiguration[_16]=_16;}}}}var _17=null;_4.publish(VIEWER_GLOBALS.EVENTS.CONFIGURATION.GET_ENTRY,"locators",function(_18){_17=_18;});if(_17&&_5.isObject(_17)){var _19;var _1a;for(key in _17){_19=_17[key];_1a=_19.url.toLowerCase();this.locatorsInConfiguration[_1a]=_1a;}}},createViewerPersistedListWidget:function(){if(this.userPersistedViewerConfigurationListWidget==null){this.userPersistedViewerConfigurationListWidget=new _c();this.userPersistedViewerConfigurationListWidget.placeAt(this.persistedEntriesContainer);this.userPersistedViewerConfigurationListWidget.on("removeReferenceLayer",_5.hitch(this,this.handlePersistedReferenceLayerRemoved));this.userPersistedViewerConfigurationListWidget.on("addReferenceLayer",_5.hitch(this,this.handleAddPersistedReferenceLayer));this.userPersistedViewerConfigurationListWidget.addExistingPersistedReferenceLayerItems(this.persistedReferenceLayers);if(!this.showBasemapsConfiguration){this.userPersistedViewerConfigurationListWidget.hideSavedBookmarks();}else{this.userPersistedViewerConfigurationListWidget.on("removeBasemap",_5.hitch(this,this.handlePersistedBasemapRemoved));this.userPersistedViewerConfigurationListWidget.on("addBasemap",_5.hitch(this,this.handleAddPersistedBasemap));this.userPersistedViewerConfigurationListWidget.addExistingPersistedBasemapItems(this.persistedBasemaps);}if(!this.showLocatorsConfiguration){this.userPersistedViewerConfigurationListWidget.hideSavedLocators();}else{this.userPersistedViewerConfigurationListWidget.on("addLocator",_5.hitch(this,this.handleAddPersistedLocator));this.userPersistedViewerConfigurationListWidget.on("removeLocator",_5.hitch(this,this.handlePersistedLocatorRemoved));this.userPersistedViewerConfigurationListWidget.addExistingPersistedLocatorItems(this.persistedLocators);}this.userPersistedViewerConfigurationListWidget.applyBindings();}},handleAddPersistedBasemap:function(_1b){if(_1b!=null&&_5.isObject(_1b)&&_1b.url!=null&&_1b.url!=""){this._addBasemapLayer(_1b.url);}},handleAddPersistedLocator:function(_1c){if(_1c!=null&&_5.isObject(_1c)&&_1c.url!=null&&_1c.url!=""){this._addLocatorService(_1c.url);}},handleAddPersistedReferenceLayer:function(_1d){if(_1d!=null&&_5.isObject(_1d)&&_1d.url!=null&&_1d.url!=""){this._addReferenceLayer(_1d.url);}},handlePersistedReferenceLayerRemoved:function(_1e){this.deleteUserPersistedReferenceLayer(_1e);},handlePersistedLocatorRemoved:function(_1f){this.deleteUserPersistedLocator(_1f);},handlePersistedBasemapRemoved:function(_20){this.deleteUserPersistedBasemap(_20);},saveBasemap:function(_21){var _22=this.persistBasemap(_21);if(_22){this.userPersistedViewerConfigurationListWidget.addBasemap(_22);}},saveLocator:function(_23){var _24=this.persistLocator(_23);if(_24){this.userPersistedViewerConfigurationListWidget.addLocator(_24);}},saveReferenceLayer:function(_25){var _26=this.persistReferenceLayer(_25);if(_26){this.userPersistedViewerConfigurationListWidget.addReferenceLayer(_26);}},handleBasemapInputKeyUp:function(e){if(VIEWER_UTILS.isEnterKey(e)){this.handleAddManualBasemap();}},handleAddManualBasemap:function(){var _27=this.basemapAddInput.get("value");if(_27==null||_27==""){return;}this._addBasemapLayer(_27);},_addBasemapLayer:function(_28){var _29=_28.toLowerCase();if(this.addedBasemaps[_29]!=null||this.basemapsInConfiguration[_29]!=null){VIEWER_UTILS.log("Cannot add basemap. Basemap already exists.",VIEWER_GLOBALS.LOG_TYPE.WARNING);_4.publish(VIEWER_GLOBALS.EVENTS.MESSAGING.SHOW,"Basemap already added");return;}var _2a=VIEWER_UTILS.getServiceTypeFromUrl(_28);if(_28!=""){if(_2a==VIEWER_GLOBALS.SERVICE_TYPES.MAP_SERVER){VIEWER_UTILS.log("Attempting to add base map: "+_28,VIEWER_GLOBALS.LOG_TYPE.INFO);_4.publish(VIEWER_GLOBALS.EVENTS.MAP.BASEMAP.ADD,_28,this.basemapAddedCallback,this.basemapAddErrorCallback);}else{VIEWER_UTILS.log("Cannot add type: "+_2a+" as a base map",VIEWER_GLOBALS.LOG_TYPE.ERROR);}}},handleReferenceLayerInputKeyUp:function(e){if(VIEWER_UTILS.isEnterKey(e)){this.handleAddReferenceLayer();}},handleAddReferenceLayer:function(){var _2b=this.referenceMapsAddInput.get("value");if(_2b==null||_2b==""){return;}this._addReferenceLayer(_2b);},_addReferenceLayer:function(_2c){var _2d=_2c.toLowerCase();if(this.addedReferenceLayers[_2d]!=null||this.referenceLayersInConfiguration[_2d]!=null){VIEWER_UTILS.log("Cannot add reference layer. Reference layer already exists.",VIEWER_GLOBALS.LOG_TYPE.WARNING);_4.publish(VIEWER_GLOBALS.EVENTS.MESSAGING.SHOW,"Reference layer already added");return;}var _2e=VIEWER_UTILS.getServiceTypeFromUrl(_2c);if(_2c==""||_2e==null){return;}_4.publish(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.ADD_REFERENCE_LAYER,{type:"dynamic",url:_2c},this.referenceLayerAddedCallback,this.referenceLayerAddErrorCallback);},_createAddedEntry:function(_2f,_30){var _31=_6.create("div",{className:"viewerConfigurationAddedElement"});var _32=_6.create("span",{innerHTML:_2f,className:"addedElementLabel"});var _33=_6.create("div",{className:"commonIcons16 remove configureEntryRemoveIcon"});_6.place(_33,_31);_6.place(_32,_31);_6.place(_31,_30);return ({container:_31,removeIcon:_33});},handleManualBasemapAdded:function(_34){if(_34==null||!_5.isObject(_34)){VIEWER_UTILS.log("Cannot add basemap",VIEWER_GLOBALS.LOG_TYPE.ERROR);_4.publish(VIEWER_GLOBALS.EVENTS.MESSAGING.SHOW,"Cannot add basemap");return;}var _35=_34.url.toLowerCase();this.addedBasemaps[_35]=_35;this.basemapAddInput.set("value","");var _36=this._createAddedEntry(_34.label,this.basemapAddedLayersContainer);on(_36.removeIcon,"click",_5.hitch(this,this.handleRemoveBasemapRequest,_34,_36));if(this.localStoragePersistSupported){this.saveBasemap({label:_34.label,url:_34.url});}},handleManualBasemapAddError:function(err){VIEWER_UTILS.log("Cannot add basemap",VIEWER_GLOBALS.LOG_TYPE.ERROR);_4.publish(VIEWER_GLOBALS.EVENTS.MESSAGING.SHOW,"Cannot add basemap");},handleManualReferenceLayerAdded:function(_37){if(_37==null||!_5.isObject(_37)){VIEWER_UTILS.log("Cannot add reference layer",VIEWER_GLOBALS.LOG_TYPE.ERROR);_4.publish(VIEWER_GLOBALS.EVENTS.MESSAGING.SHOW,"Cannot add reference layer");return;}var _38=_37.url.toLowerCase();this.addedReferenceLayers[_38]=_38;this.referenceMapsAddInput.set("value","");var _39=REG_EXP_UTILS.getServiceNameFromUrl(_37.url);var _3a=this._createAddedEntry(_39,this.referenceAddedLayersContainer);on(_3a.removeIcon,"click",_5.hitch(this,this.handleRemoveReferenceLayerRequest,_37,_3a));if(this.localStoragePersistSupported){this.saveReferenceLayer({label:_39,url:_37.url});}},handleManualReferenceLayerAddError:function(err){this.referenceMapsAddInput.set("value","");VIEWER_UTILS.log("Cannot add reference layer",VIEWER_GLOBALS.LOG_TYPE.ERROR);VIEWER_UTILS.log("Cannot add reference layer",VIEWER_GLOBALS.LOG_TYPE.ERROR);},handleLocatorInputKeyUp:function(e){if(VIEWER_UTILS.isEnterKey(e)){this.handleAddLocatorService();}},handleManualLocatorAdded:function(id,_3b){var _3c=_3b.toLowerCase();this.addedLocators[_3c]=_3c;VIEWER_UTILS.log("Added locator: "+_3b,VIEWER_GLOBALS.LOG_TYPE.INFO);this.locatorAddInput.set("value","");var _3d=REG_EXP_UTILS.getServiceNameFromUrl(_3b);var _3e=this._createAddedEntry(_3d,this.addedLocatorsContainer);on(_3e.removeIcon,"click",_5.hitch(this,this.handleRemoveLocatorRequest,id,_3e));if(this.localStoragePersistSupported){this.saveLocator({label:_3d,url:_3b});}},handleAddLocatorService:function(){var _3f=this.locatorAddInput.get("value");if(_3f==null||_3f==""){return;}this._addLocatorService(_3f);},_addLocatorService:function(_40){var _41=_40.toLowerCase();if(this.addedLocators[_41]!=null||this.locatorsInConfiguration[_41]!=null){VIEWER_UTILS.log("Cannot add locator. Locator already exists.",VIEWER_GLOBALS.LOG_TYPE.WARNING);_4.publish(VIEWER_GLOBALS.EVENTS.MESSAGING.SHOW,"Locator already added");return;}var _42=VIEWER_UTILS.getServiceTypeFromUrl(_40);if(_42==VIEWER_GLOBALS.SERVICE_TYPES.GEOCODE_SERVER){_4.publish(VIEWER_GLOBALS.EVENTS.LOCATOR.ADD_LOCATOR,_40,this.locatorAddedCallback);}},createConfirmDeleteEntryTooltip:function(){this.confirmDeleteEntryTooltip=new _9({confirmCallback:_5.hitch(this,this.handleConfirmedEntryDelete)});this.confirmDeleteEntryTooltip.on("hide",_5.hitch(this,function(){this.deleteEntryConfirmedCallback=null;}));},handleConfirmedEntryDelete:function(){if(this.deleteEntryConfirmedCallback!=null&&_5.isFunction(this.deleteEntryConfirmedCallback)){this.deleteEntryConfirmedCallback();}this.deleteEntryConfirmedCallback=null;},showDeleteEntryTooltip:function(_43){if(_43==null){return;}if(this.confirmDeleteEntryTooltip==null){this.createConfirmDeleteEntryTooltip();}if(this.confirmDeleteEntryTooltip){this.confirmDeleteEntryTooltip.setAroundNode(_43);this.confirmDeleteEntryTooltip.show();}},handleRemoveBasemapRequest:function(_44,_45){this.deleteEntryConfirmedCallback=_5.hitch(this,this._removeBasemap,_44,_45);this.showDeleteEntryTooltip(_45.removeIcon);},handleRemoveLocatorRequest:function(_46,_47){this.deleteEntryConfirmedCallback=_5.hitch(this,this._removeLocator,_46,_47);this.showDeleteEntryTooltip(_47.removeIcon);},handleRemoveReferenceLayerRequest:function(_48,_49){this.deleteEntryConfirmedCallback=_5.hitch(this,this._removeReferenceLayer,_48,_49);this.showDeleteEntryTooltip(_49.removeIcon);},_removeBasemap:function(_4a,_4b){_4.publish(VIEWER_GLOBALS.EVENTS.MAP.BASEMAP.REMOVE,_4a.id);var _4c=_4a.url.toLowerCase();this.addedBasemaps[_4c]=_4c;_6.destroy(_4b.container);},_removeLocator:function(_4d,_4e){_4.publish(VIEWER_GLOBALS.EVENTS.LOCATOR.REMOVE_LOCATOR,_4d);_6.destroy(_4e.container);},_removeReferenceLayer:function(_4f,_50){_4.publish(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.REMOVE_REFERENCE_LAYER,_4f);var _51=_4f.url.toLowerCase();delete this.addedReferenceLayers[_51];_6.destroy(_50.container);},hidePopups:function(){if(this.confirmDeleteEntryTooltip){this.confirmDeleteEntryTooltip.hide();}}});});