//>>built
require({cache:{"url:esriviewer/ui/measure/template/MeasureWidgetTemplate.html":"<div class=\"measurementWidget\">\r\n    <div class=\"measureIcon areaIcon\"\r\n         title=\"Area\"\r\n         data-bind=\"click:handleAreaButtonClick, css: {measurementIconSelected: areaActive}\"></div>\r\n    <div class=\"measureIcon distanceIcon\"\r\n         title=\"Distance\"\r\n         data-bind=\"click:handleDistanceButtonClick, css: {measurementIconSelected: distanceActive}\"></div>\r\n    <div class=\"measureIcon locationIcon\"\r\n         title=\"Location\"\r\n         data-bind=\"click:handleLocationButtonClick, css: {measurementIconSelected: locationActive}\"></div>\r\n    <div class=\"measurementSpacer\">|</div>\r\n    <select data-bind=\"visible: areaActive, options: areaMeasurementUnits ,value:selectedAreaUnits, optionsText: 'label', optionsValue: 'value'\">\r\n    </select>\r\n    <select data-bind=\"visible: distanceActive, options: distanceMeasurementUnits ,value:selectedDistanceUnits, optionsText: 'label', optionsValue: 'value'\">\r\n    </select>\r\n    <select data-bind=\"visible: locationActive, options: locationUnits ,value:selectedLocationUnits, optionsText: 'label', optionsValue: 'value'\">\r\n    </select>\r\n\r\n\r\n    <div class=\"measurementResultsContainer\">\r\n        <span data-bind=\"text: measureMethodText\" class=\"measureMethodText\"></span>\r\n        <span data-bind=\"text: resultsText\" class=\"measureResultsText\"></span>\r\n        <span data-bind=\"text: unitsText\"  class=\"measureUnitsText\"></span>\r\n    </div>\r\n</div>"}});define("esriviewer/ui/measure/MeasureWidget",["dojo/_base/declare","dojo/_base/lang","dojo/_base/Color","dojo/topic","../base/UITemplatedWidget","dojo/text!./template/MeasureWidgetTemplate.html","./model/MeasureWidgetViewModel","../draw/base/MapDrawSupport","esri/geometry/Point","esri/geometry/Polyline","esri/geometry/Polygon","esri/symbols/SimpleFillSymbol","esri/symbols/SimpleLineSymbol","esri/symbols/SimpleMarkerSymbol"],function(_1,_2,_3,_4,_5,_6,_7,_8,_9,_a,_b,_c,_d,_e){return _1([_5,_8],{measureFloatPrecision:2,locationFloatPrecision:3,templateString:_6,AREA:"area",DISTANCE:"distance",LOCATION:"location",constructor:function(){this.currentGeometry=null;this.currentGraphic=null;},postCreate:function(){this.distanceResponseCallback=_2.hitch(this,this.handleDistanceResponse);this.areaResponseCallback=_2.hitch(this,this.handleAreaResponse);this.locationResponseCallback=_2.hitch(this,this.handleLocationResponse);this.initSymbology();this.viewModel=new _7();this.viewModel.areaActive.subscribe(_2.hitch(this,this.handleAreaActiveChanged));this.viewModel.distanceActive.subscribe(_2.hitch(this,this.handleDistanceActiveChanged));this.viewModel.locationActive.subscribe(_2.hitch(this,this.handleLocationActiveChanged));this.viewModel.selectedAreaUnits.subscribe(_2.hitch(this,this.handleSelectedAreaUnitsChanged));this.viewModel.selectedDistanceUnits.subscribe(_2.hitch(this,this.handleSelectedDistanceUnitsChanged));this.viewModel.selectedLocationUnits.subscribe(_2.hitch(this,this.handleSelectedLocationUnitsChanged));ko.applyBindings(this.viewModel,this.domNode);},handleSelectedLocationUnitsChanged:function(_f){if(this.currentGeometry&&this.currentGeometry instanceof _9){_4.publish(VIEWER_GLOBALS.EVENTS.GEOMETRY_SERVICE.TASKS.PROJECT_TO_LAT_LON,this.currentGeometry,this.locationResponseCallback);}},handleSelectedDistanceUnitsChanged:function(_10){if(this.currentGeometry&&this.currentGeometry instanceof _a){_4.publish(VIEWER_GLOBALS.EVENTS.GEOMETRY_SERVICE.TASKS.CALCULATE_DISTANCE,this.currentGeometry,_10,this.distanceResponseCallback);}},handleSelectedAreaUnitsChanged:function(_11){if(this.currentGeometry&&this.currentGeometry instanceof _b){_4.publish(VIEWER_GLOBALS.EVENTS.GEOMETRY_SERVICE.TASKS.CALCULATE_AREA,this.currentGeometry,_11,this.areaResponseCallback);}},initSymbology:function(){this.polygonSymbol=new _c(_c.STYLE_SOLID,new _d(_d.STYLE_SOLID,new _3([0,0,255]),1),new _3([0,0,255,0]));this.pointSymbol=new _e(_e.STYLE_X,1,new _d(_d.STYLE_SOLID,new _3("blue")));this.lineSymbol=new _d(_d.STYLE_SOLID,new _3([0,0,255]),1);},handleAreaActiveChanged:function(_12){this.clearCurrentGraphic();if(_12){this.viewModel.measureMethodText("");this.viewModel.unitsText("");this.viewModel.resultsText("");this.handlePolygonDraw();this.activeMode=this.AREA;}else{if(this.activeMode==this.AREA){this.activeMode="";this.clearDraw();}}},handleDistanceActiveChanged:function(_13){this.clearCurrentGraphic();if(_13){this.viewModel.measureMethodText("");this.viewModel.unitsText("");this.viewModel.resultsText("");this.handleLineDraw();this.activeMode=this.DISTANCE;}else{if(this.activeMode==this.DISTANCE){this.activeMode="";this.clearDraw();}}},handleLocationActiveChanged:function(_14){this.clearCurrentGraphic();if(_14){this.viewModel.measureMethodText("");this.viewModel.unitsText("");this.viewModel.resultsText("");this.handlePointDraw();this.activeMode=this.LOCATION;}else{if(this.activeMode==this.LOCATION){this.activeMode="";this.clearDraw();}}},clearDraw:function(){this.inherited(arguments);this.viewModel.areaActive(false);this.viewModel.distanceActive(false);this.viewModel.locationActive(false);this.viewModel.measureMethodText("");this.viewModel.unitsText("");this.viewModel.resultsText("");_4.publish(VIEWER_GLOBALS.EVENTS.DRAW.USER.DRAW_CANCEL);},clearCurrentGraphic:function(){if(this.currentGraphic){_4.publish(VIEWER_GLOBALS.EVENTS.MAP.GRAPHICS.REMOVE,this.currentGraphic);this.currentGraphic=null;}},handleLineDraw:function(){this.setDraw(VIEWER_GLOBALS.EVENTS.MAP.TOOLS.DRAW_POLYLINE);},handlePolygonDraw:function(){this.setDraw(VIEWER_GLOBALS.EVENTS.MAP.TOOLS.DRAW_POLYGON);},handlePointDraw:function(){this.setDraw(VIEWER_GLOBALS.EVENTS.MAP.TOOLS.DRAW_POINT);},geometryAdded:function(_15){this.currentGeometry=_15;this.inherited(arguments);if(this.viewModel.locationActive()){this.setDraw(VIEWER_GLOBALS.EVENTS.MAP.TOOLS.DRAW_POINT);_4.publish(VIEWER_GLOBALS.EVENTS.GEOMETRY_SERVICE.TASKS.PROJECT_TO_LAT_LON,_15,this.locationResponseCallback);}if(this.viewModel.areaActive()){this.setDraw(VIEWER_GLOBALS.EVENTS.MAP.TOOLS.DRAW_POLYGON);_4.publish(VIEWER_GLOBALS.EVENTS.GEOMETRY_SERVICE.TASKS.CALCULATE_AREA,_15,this.viewModel.selectedAreaUnits(),this.areaResponseCallback);}if(this.viewModel.distanceActive()){this.setDraw(VIEWER_GLOBALS.EVENTS.MAP.TOOLS.DRAW_POLYLINE);_4.publish(VIEWER_GLOBALS.EVENTS.GEOMETRY_SERVICE.TASKS.CALCULATE_DISTANCE,_15,this.viewModel.selectedDistanceUnits(),this.distanceResponseCallback);}},handleDistanceResponse:function(_16){if(_16==null||!_2.isObject(_16)||_16.lengths==null||!_2.isArray(_16.lengths)||_16.lengths.length<1){return;}this.viewModel.measureMethodText("Distance: ");this.viewModel.resultsText(REG_EXP_UTILS.numberToStringWithCommas(_16.lengths[0].toFixed(this.measureFloatPrecision)));this.viewModel.unitsText(this.viewModel.getLabelForDistanceValue(this.viewModel.selectedDistanceUnits()));},handleAreaResponse:function(_17){if(_17==null||!_2.isObject(_17)||_17.areas==null||!_2.isArray(_17.areas)||_17.areas.length<1){return;}var _18=_17.areas[0];this.viewModel.measureMethodText("Area: ");this.viewModel.unitsText(this.viewModel.getLabelForAreaValue(this.viewModel.selectedAreaUnits()));this.viewModel.resultsText(REG_EXP_UTILS.numberToStringWithCommas(_18.toFixed(this.measureFloatPrecision)));},handleLocationResponse:function(_19){if(_19==null||!_2.isArray(_19)||_19.length<1){return;}var pt=_19[0];this.viewModel.measureMethodText("");this.viewModel.unitsText("");if(this.viewModel.selectedLocationUnits()==VIEWER_GLOBALS.ESRI_UNITS.DEGREE_MINUTE_SECONDS){this.viewModel.resultsText("Latitude: "+GEOMETRY_UTILS.ddToDMSString(pt.y)+" Longitude:"+GEOMETRY_UTILS.ddToDMSString(pt.x));}else{this.viewModel.resultsText("Latitude: "+pt.y.toFixed(this.locationFloatPrecision)+" Longitude: "+pt.x.toFixed(this.locationFloatPrecision));}},onAnnotationCreated:function(_1a){if(_1a!=null&&_1a.graphic!=null){this.inherited(arguments);this.clearCurrentGraphic();this.currentGraphic=_1a.graphic;_4.publish(VIEWER_GLOBALS.EVENTS.MAP.GRAPHICS.ADD,_1a.graphic);}},reset:function(){this.clearCurrentGraphic();this.clearDraw();}});});