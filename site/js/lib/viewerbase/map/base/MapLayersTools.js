//>>built
define("esriviewer/map/base/MapLayersTools",["dojo/_base/declare","dojo/topic","dojo/_base/lang","esri/layers/OpenStreetMapLayer","esri/layers/FeatureLayer","esri/layers/GraphicsLayer","esri/layers/ArcGISImageServiceLayer","esri/layers/KMLLayer","esri/layers/WMSLayer","esri/layers/ArcGISTiledMapServiceLayer","esri/layers/ArcGISDynamicMapServiceLayer"],function(_1,_2,_3,_4,_5,_6,_7,_8,_9,_a,_b){return _1([],{labelServicesVisible:false,constructor:function(_c){_3.mixin(this,_c);this.loadViewerConfigurationData();this.currrentBasemapKey=null;this.labelServices={};this.timeEnabledLayers=[];this.operationalLayers={};this.graphicsLayers={};this.initListeners();},loadViewerConfigurationData:function(){if(this.mapConfiguration==null){var _d=null;_2.publish(VIEWER_GLOBALS.EVENTS.CONFIGURATION.GET_ENTRY,"map",function(_e){_d=_e;});if(_d){this.mapConfiguration=_d;}}},initListeners:function(){_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.BASEMAP.REMOVE,_3.hitch(this,this.handleRemoveBasemap));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.ADD_GRAPHICS_LAYER,_3.hitch(this,this.handleAddGraphicsLayer));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.BASEMAP.ADD,_3.hitch(this,this.handleAddBasemap));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.BASEMAP.SET,_3.hitch(this,this.changeBaseMaps));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.BASEMAP.GET_CURRENT_URL,_3.hitch(this,this.handleGetCurrentBasemapUrl));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.BASEMAP.GET_CURRENT,_3.hitch(this,this.handleGetCurrentBasemap));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LABEL_SERVICES.SHOW,_3.hitch(this,this.showLabelServices));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LABEL_SERVICES.HIDE,_3.hitch(this,this.hideLabelServices));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LABEL_SERVICES.SERVICE_EXISTS,_3.hitch(this,this.handleLabelServiceExists));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.TIME.GET_TIME_ENABLED_SERVICES,_3.hitch(this,this.handleGetTimeEnabledLayers));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.OPERATIONAL.GET,_3.hitch(this,this.handleGetOperationalLayers));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.ADD_FROM_URL,_3.hitch(this,this.handleAddLayerFromUrl));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.ADD,_3.hitch(this,this.handleAddLayer));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.ADD_EXTERNAL_MANAGED_LAYER,_3.hitch(this,this.handleAddExternalManagedLayer));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.REMOVE_EXTERNAL_MANAGED_LAYER,_3.hitch(this,this.handleRemoveExternalManagedLayer));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.GET_FEATURE_LAYER_IF_EXISTS,_3.hitch(this,this.handleGetFeatureLayerIfExists));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.REMOVE,_3.hitch(this,this.handleRemoveLayer));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.ADD_REFERENCE_LAYER,_3.hitch(this,this.handleAddReferenceLayerRequest));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.REMOVE_REFERENCE_LAYER,_3.hitch(this,this.handleRemoveReferenceLayerRequest));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.MOVE_LAYER_TO_TOP,_3.hitch(this,this.handleMoveLayerToTop));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.MAKE_VISIBLE,_3.hitch(this,this.handleMakeLayerVisible));_2.subscribe(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.MAKE_INVISIBLE,_3.hitch(this,this.handleMakeLayerInvisible));this.map.on("layer-add",_3.hitch(this,this._handleLayerAdded));},handleMakeLayerVisible:function(_f){if(_f!=null){_f.show();}},handleMakeLayerInvisible:function(_10){if(_10!=null){_10.hide();}},handleMoveLayerToTop:function(_11){if(_11){var _12=this.map.layerIds.length;if(this.map.graphicsLayerIds!=null&&this.map.graphicsLayerIds.length!=null){_12+=this.map.graphicsLayerIds.length;}this.map.reorderLayer(_11,_12);}},_handleLayerAdded:function(evt){if(evt==null||evt.layer==null){return;}var _13=evt.layer;if(_13!=null&&_13.isReferenceLayer==null||!_13.isReferenceLayer){if(_13.timeInfo!=null){this.timeEnabledLayers.push(_13);VIEWER_UTILS.log("Found time enabled layer",VIEWER_GLOBALS.LOG_TYPE.INFO);_2.publish(VIEWER_GLOBALS.EVENTS.MAP.TIME.TIME_LAYER_FOUND,_13);}}if(_13.isOperationalLayer!=null&&_13.isOperationalLayer===true){VIEWER_UTILS.log("Added operational layer",VIEWER_GLOBALS.LOG_TYPE.INFO);_2.publish(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.ADDED,_13);}},handleGetFeatureLayerIfExists:function(_14,_15){if(_14==null||_14==""||_15==null||!_3.isFunction(_15)){return;}var _16=_14.toLowerCase();_15(this.operationalLayers[_16]);},handleAddGraphicsLayer:function(_17){if(_17!=null){this.map.addLayer(_17);var _18=VIEWER_UTILS.generateUUID();_17.id=_18;this.graphicsLayers[_18]=_17;}},handleAddBasemap:function(_19,_1a,_1b){var id=_19.toLowerCase();if(this.basemaps[id]!=null){_1b("Basemap Already Exists");}var _1c=_3.hitch(this,this._handleBaseMapServiceDescriptionLoaded,_19,_1a,_1b);VIEWER_UTILS.getServiceDescription(_19,_1c);},_handleBaseMapServiceDescriptionLoaded:function(_1d,_1e,_1f,_20){if(this.isServiceTiledAndInMapSR(_20)){var id=_1d.toLowerCase();var _21={id:id,label:REG_EXP_UTILS.getServiceNameFromUrl(_1d),url:_1d};this.basemaps[id]=_21;VIEWER_UTILS.debug("Added Basemap: "+id);_2.publish(VIEWER_GLOBALS.EVENTS.MAP.BASEMAP.ADDED,_21,id);if(_1e!=null&&_3.isFunction(_1e)){_1e(_21);}}else{if(_1f!=null&&_3.isFunction(_1f)){_1f("Could not add basemap. Is the service cached and in the map spatial reference ("+this.map.spatialReference.wkid+")?");}}},handleRemoveLayer:function(_22){if(_22==null){return;}var _23=VIEWER_UTILS.getLayerUniqueId(_22);if(_23!=null){if(this.operationalLayers[_23]){delete this.operationalLayers[_23];}}if(_22 instanceof _6){if(this.graphicsLayers[_22.id]!=null){delete this.graphicsLayers[_22.id];}}this.map.removeLayer(_22);VIEWER_UTILS.debug("Removed Layer: "+_22.name);_2.publish(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.REMOVED,_22);},handleGetOperationalLayers:function(_24){if(_24!=null&&_3.isFunction(_24)){var _25=[];for(var key in this.operationalLayers){_25.push(this.operationalLayers[key]);}_24(_25);}},handleGetTimeEnabledLayers:function(_26){if(_26!=null&&_3.isFunction(_26)){_26(this.timeEnabledLayers);}},handleRemoveExternalManagedLayer:function(_27){this.map.removeLayer(_27);},handleAddExternalManagedLayer:function(_28){this.map.addLayer(_28);},handleAddLayer:function(_29,_2a,_2b,_2c){if(_2a&&_2a.isOperationalLayer!=false){var _2d=VIEWER_UTILS.getLayerUniqueId(_29);if(_2d!=null){if(this.operationalLayers[_2d]!=null){return;}}this.operationalLayers[_2d]=_29;_29.isOperationalLayer=true;}else{_29.isOperationalLayer=false;}_29.canRemove=_2a!=null&&_2a.canRemove!=false;this.map.addLayer(_29);if(_2b!=null&&_3.isFunction(_2b)){_29.on("load",_2b);}if(_2c!=null&&_3.isFunction(_2c)){var _2e=function(){_2c(_29);};_29.on("error",_3.hitch(this,_2e));}VIEWER_UTILS.debug("Added Layer: "+_2d);},handleAddLayerFromUrl:function(_2f,_30,_31,_32){var _33=VIEWER_UTILS.getLayerUniqueId(_2f);if(this.operationalLayers[_33]!=null){if(_32!=null&&_3.isFunction(_32)){_32("Layer has already been added to the map");}else{_2.publish(VIEWER_GLOBALS.EVENTS.MESSAGING.SHOW,"Layer has already been added to the map");}return;}var _34=null;var _35=VIEWER_UTILS.getServiceTypeFromUrl(_2f);if(_35){if(_35==VIEWER_GLOBALS.SERVICE_TYPES.MAP_SERVER){if(REG_EXP_UTILS.isFeatureLayer(_2f)){_34=new _5(_2f,_3.mixin({mode:_5.MODE_ONDEMAND},_30||{}));}else{this._handleAddMapServiceLayer(_2f,_30,_31,_32);return;}}else{if(_35==VIEWER_GLOBALS.SERVICE_TYPES.KML){_34=new _8(_2f);}else{if(_35==VIEWER_GLOBALS.SERVICE_TYPES.IMAGE_SERVER){_34=new _7(_2f);}else{if(_35===VIEWER_GLOBALS.SERVICE_TYPES.FEATURE_SERVER){_34=new _5(_2f,_3.mixin({mode:_5.MODE_ONDEMAND},_30||{}));}}}}}else{if(_2f.indexOf("/wms/")>-1){_34=new _9(_2f,_30);}}if(_34){_34.canRemove=_30!=null&&_30.canRemove!=false;_34.isOperationalLayer=_30!=null&&_30.isOperationalLayer!=null&&_30.isOperationalLayer!=false;_34.layerAliasName=(_30&&_30.label)?_30.label:REG_EXP_UTILS.getServiceNameFromUrl(_2f);if(_31!=null&&_3.isFunction(_31)){_34.on("load",_31);}if(_32!=null&&_3.isFunction(_32)){_34.on("error",_32);}var _36=this.operationalLayers;_34.on("load",function(){_36[_33]=_34;});VIEWER_UTILS.debug("Added Layer from URL: "+_2f);this.map.addLayer(_34);}else{if(_3.isFunction(_32)){_32("Could Not Add Layer");}}},_handleAddMapServiceLayer:function(_37,_38,_39,_3a){var _3b=_3.hitch(this,_3.hitch(this,this._handleAddMapServiceServiceDescriptionLoaded,_37,_38,_39,_3a));VIEWER_UTILS.getServiceDescription(_37,_3b,_3a);},_handleAddMapServiceServiceDescriptionLoaded:function(_3c,_3d,_3e,_3f,_40){var _41;if(_40!=null&&_3.isObject(_40)){if(this.isServiceTiledAndInMapSR(_40)){_41=new _a(_3c);}else{_41=new _b(_3c);}_41.isOperationalLayer=_3d!=null&&_3d.isOperationalLayer!=null&&_3d.isOperationalLayer!=false;var _42=this.operationalLayers;_41.on("load",function(){_42[_41.url.toLowerCase()]=_41;});_41.serviceDescription=_40;}if(_41!=null){_41.layerAliasName=(_3d&&_3d.label)?_3d.label:REG_EXP_UTILS.getServiceNameFromUrl(_3c);if(_3d!=null&&_3d.canRemove!=null){_41.canRemove=true;}if(_3e!=null&&_3.isFunction(_3e)){_41.on("load",_3e);}if(_3f!=null&&_3.isFunction(_3f)){_41.on("error",_3f);}VIEWER_UTILS.debug("Added Layer: "+_41.url);this.map.addLayer(_41);}},isServiceTiledAndInMapSR:function(_43){if(_43!=null&&_3.isObject(_43)){return _43.tileInfo!=null&&_43.spatialReference!=null&&_43.spatialReference.wkid==this.map.spatialReference.wkid;}return false;},handleLabelServiceExists:function(_44){if(_44!=null&&_3.isFunction(_44)){var _45=false;for(var key in this.labelServices){_45=true;break;}_44(_45);}},handleRemoveBasemap:function(id){var _46=this.basemaps[id];if(this.basemaps[id]!=null){if(this.currrentBasemapKey!=null&&this.currrentBasemapKey===id){this.map.removeLayer(this.currentBasemap);for(var key in this.basemaps){this.changeBaseMaps(key);break;}}delete this.basemaps[id];VIEWER_UTILS.debug("Removed Basemap: "+id);_2.publish(VIEWER_GLOBALS.EVENTS.MAP.BASEMAP.REMOVED,id);}},changeBaseMaps:function(key){var _47=this.basemaps[key];if(_47){if(this.currrentBasemapKey!=null&&this.currrentBasemapKey===key){return;}if(this.currentBasemap!=null){this.map.removeLayer(this.currentBasemap);}if(_47.isOpenStreetMap==null||_47.isOpenStreetMap==false){this.currentBasemap=new _a(_47.url);}else{this.currentBasemap=new _4();}this.map.addLayer(this.currentBasemap,0);VIEWER_UTILS.debug("Changed Basemap: "+key);this.currrentBasemapKey=key;}},handleGetCurrentBasemapUrl:function(_48){if(_48!=null&&_3.isFunction(_48)){if(this.mapConfiguration.useBasemapGallery==null||this.mapConfiguration.useBasemapGallery!=true){_48(this.basemaps[this.currrentBasemapKey].url);return;}else{var _49;_2.publish(VIEWER_GLOBALS.EVENTS.MAP.BASEMAP.GALLERY.GET,function(_4a){_49=_4a;});if(_49){var _4b=_49.getSelected();if(_4b==null){if(this.webMapItem&&this.webMapItem.itemData&&this.webMapItem.itemData.baseMap&&this.webMapItem.itemData.baseMap.baseMapLayers&&this.webMapItem.itemData.baseMap.baseMapLayers&&_3.isArray(this.webMapItem.itemData.baseMap.baseMapLayers)&&this.webMapItem.itemData.baseMap.baseMapLayers.length>0){_48(this.webMapItem.itemData.baseMap.baseMapLayers[0].url);return;}}else{if(_4b&&_4b.layers&&_3.isArray(_4b.layers)&&_4b.layers.length>0){_48(_4b.layers[0].url);return;}}}}_48(null);}},handleGetCurrentBasemap:function(_4c){if(_4c!=null&&_3.isFunction(_4c)){if(this.mapConfiguration.useBasemapGallery==null||this.mapConfiguration.useBasemapGallery!=true){_4c(this.currrentBasemapKey);return;}else{var _4d=null;_2.publish(VIEWER_GLOBALS.EVENTS.MAP.BASEMAP.GALLERY.GET,function(_4e){_4d=_4e;});if(_4d){var _4f=_4d.getSelected();if(_4f==null){if(this.webMapItem&&this.webMapItem.itemData&&this.webMapItem.itemData.baseMap&&this.webMapItem.itemData.baseMap.baseMapLayers&&this.webMapItem.itemData.baseMap.baseMapLayers&&_3.isArray(this.webMapItem.itemData.baseMap.baseMapLayers)&&this.webMapItem.itemData.baseMap.baseMapLayers.length>0){_4c(new _a(this.webMapItem.itemData.baseMap.baseMapLayers[0].url));return;}}else{_4c(_4f);return;}}}}_4c(null);},showLabelServices:function(){var _50;for(var key in this.labelServices){_50=this.labelServices[key];_50.show();this.handleMoveLayerToTop(_50);}VIEWER_UTILS.debug("Displayed Label Services");this.labelServicesVisible=true;},hideLabelServices:function(){for(var key in this.labelServices){this.labelServices[key].hide();}VIEWER_UTILS.debug("Hid Label Services");this.labelServicesVisible=false;},handleAddReferenceLayerRequest:function(_51,_52,_53){if(_51==null||_51.url==null||_51.url==""){if(_53!=null&&_3.isFunction(_53)){_53("Invalid Reference Layer");}}var id=VIEWER_UTILS.getLayerUniqueId(_51);if(this.labelServices[id]!=null){if(_53!=null&&_3.isFunction(_53)){_53("Reference Layer Already Exists");}}var _54=this._addReferenceLayer(_51);if(_54!=null){if(_52!=null&&_3.isFunction(_52)){_52(_54);}}else{if(_53!=null&&_3.isFunction(_53)){_53("Could not add reference layer");}}},_addReferenceLayers:function(){if(this.mapConfiguration.referenceLayers!=null&&_3.isArray(this.mapConfiguration.referenceLayers)){var _55;for(var i=0;i<this.mapConfiguration.referenceLayers.length;i++){_55=this.mapConfiguration.referenceLayers[i];this._addReferenceLayer(_55);}}},_addReferenceLayer:function(_56){var _57=this._getMapLayerFromLayerObject(_56);if(_57!=null){if(!this.labelServicesVisible){_57.hide();}else{_57.show();}var id=VIEWER_UTILS.getLayerUniqueId(_57);if(id==null){return;}this.labelServices[id]=_57;_57.isReferenceLayer=true;this.map.addLayer(_57);VIEWER_UTILS.log("Added Reference Layer: "+_57.url,VIEWER_GLOBALS.LOG_TYPE.INFO);_2.publish(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.REFERENCE_LAYER_ADDED,_57);return _57;}return null;},handleRemoveReferenceLayerRequest:function(_58){var id=VIEWER_UTILS.getLayerUniqueId(_58);if(id==null){return;}if(this.labelServices[id]!=null){this.map.removeLayer(_58);delete this.labelServices[id];var _59=false;for(var key in this.labelServices){_59=true;break;}VIEWER_UTILS.log("Removed reference layer",VIEWER_GLOBALS.LOG_TYPE.INFO);_2.publish(VIEWER_GLOBALS.EVENTS.MAP.LAYERS.REFERENCE_LAYER_REMOVED,_58,_59);}},addWebMapOperationalLayers:function(_5a){var _5b;var _5c;for(var i=0;i<_5a.itemData.operationalLayers.length;i++){_5b=_5a.itemData.operationalLayers[i];_5c=_5b.layerObject;_5c.name=REG_EXP_UTILS.getServiceNameFromUrl(_5c.url);_5c.isOperationalLayer=true;var _5d=VIEWER_UTILS.getLayerUniqueId(_5c);if(this.operationalLayers[_5d]==null){this.operationalLayers[_5d]=_5c;}VIEWER_UTILS.getServiceDescription(_5c.url,_3.hitch(this,function(_5e,_5f){_5e.serviceDescription=_5f;this.handleLayerAdded(_5e);},_5c));}},_addOperationalLayers:function(){if(this.mapConfiguration.operationalLayers!=null&&_3.isArray(this.mapConfiguration.operationalLayers)){var _60;for(var i=0;i<this.mapConfiguration.operationalLayers.length;i++){_60=this.mapConfiguration.operationalLayers[i];var _61=this._getMapLayerFromLayerObject(_60);if(_61!=null){VIEWER_UTILS.getServiceDescription(_60.url,_3.hitch(this,function(_62,_63){_62.serviceDescription=_63;},_61));_61.name=REG_EXP_UTILS.getServiceNameFromUrl(_60.url);if(_60.label!=null&&_60.label!=""){_61.layerAliasName=_60.label;}this.map.addLayer(_61);_61.isOperationalLayer=true;var _64=VIEWER_UTILS.getLayerUniqueId(_61);if(this.operationalLayers[_64]==null){this.operationalLayers[_64]=_61;}}}}},_getMapLayerFromLayerObject:function(_65){if(_65.type==null||_65.type==""||_65.url==null||_65.url==""){return null;}var _66={};if(_65.visible!=null){_66.visible=_65.visible;}var _67=_65.type.toLowerCase();if(_67==="tiled"){return new _a(_65.url,_66);}else{if(_67==="dynamic"){var _68=new _b(_65.url,_66);if(_65.visibleLayerIds!=null&&_3.isArray(_65.visibleLayerIds)){_68.setVisibleLayers(_65.visibleLayerIds);}return _68;}else{if(_67==="image"){return new _7(_65.url,_66);}else{if(_67==="feature"){_66=_3.mixin(_66,{mode:_5.MODE_ONDEMAND,outFields:["*"]});var _69=new _5(_65.url,_66);if(_65.mapLabel!=null&&_65.mapLabel.field!=null&&_65.mapLabel.field!=""){this._createFeatureLayerLabels(_69,_65.mapLabel);}return _69;}else{if(_67==="kml"){return new _8(_65.url);}}}}}},loadMapConfigurationLayers:function(){this._addReferenceLayers();this._addOperationalLayers();},_createFeatureLayerLabels:function(_6a,_6b){require(["esri/layers/LabelLayer","dojo/_base/Color","esri/renderers/SimpleRenderer","esri/symbols/TextSymbol"],_3.hitch(this,function(_6c,_6d,_6e,_6f){var _70=_6b.color!=null?_6b.color:"#000";var _71=new _6c({id:VIEWER_UTILS.generateUUID()});var _72=new _6f().setColor(new _6d(_70));var _73=_6b.fontSize!=null?_6b.fontSize:"12pt";_72.font.setSize(_73);var _74=_6b.fontFamily!=null?_6b.fontFamily:"arial";_72.font.setFamily(_74);var _75=new _6e(_72);_71.addFeatureLayer(_6a,_75,"${"+_6b.field+"}");this.map.addLayer(_71);_6a.on("visibility-change",_3.hitch(this,function(_76,e){if(e&&e.visible){_76.show();}else{_76.hide();}},_71));_6a.on("opacity-change",_3.hitch(this,function(_77,e){if(e&&e.opacity!=null){_71.setOpacity(e.opacity);}},_71));}));}});});